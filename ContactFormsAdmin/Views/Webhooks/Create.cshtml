@model ContactFormsAdmin.Models.Webhook

@{
    ViewData["Title"] = "Create Webhook";
}

<div class="row">
    <div class="col-md-8">
        <h1>Create Webhook</h1>
        <p class="text-muted">Configure a webhook to receive real-time notifications when contact forms are submitted.</p>

        <form asp-action="Create" method="post" class="needs-validation" novalidate>
            <div class="card">
                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="SiteId" class="form-label">Site ID</label>
                        <input asp-for="SiteId" class="form-control" placeholder="e.g., world1" required />
                        <div class="form-text">The site ID that this webhook should trigger for.</div>
                        <span asp-validation-for="SiteId" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Url" class="form-label">Webhook URL</label>
                        <input asp-for="Url" type="url" class="form-control" placeholder="https://example.com/webhook" required />
                        <div class="form-text">The URL where POST requests will be sent when forms are submitted.</div>
                        <span asp-validation-for="Url" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Events" class="form-label">Events (Optional)</label>
                        <input asp-for="Events" class="form-control" placeholder="submission.created, submission.updated" />
                        <div class="form-text">Comma-separated list of events to trigger on. Leave empty for all events.</div>
                        <span asp-validation-for="Events" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Secret" class="form-label">Secret (Optional)</label>
                        <input asp-for="Secret" type="password" class="form-control" placeholder="Enter a secret for HMAC signing" />
                        <div class="form-text">Optional secret for HMAC-SHA256 signature verification. Recommended for security.</div>
                        <span asp-validation-for="Secret" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <div class="form-check">
                            <input asp-for="IsActive" class="form-check-input" type="checkbox" checked />
                            <label asp-for="IsActive" class="form-check-label">
                                Active
                            </label>
                            <div class="form-text">Webhook will only trigger if active.</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mt-3">
                <button type="submit" class="btn btn-primary">Create Webhook</button>
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">How Webhooks Work</h5>
            </div>
            <div class="card-body">
                <p><strong>Webhook Payload:</strong></p>
                <pre class="bg-light p-2" style="font-size: 0.8em;">{
  "id": 123,
  "siteId": "world1",
  "name": "John Doe",
  "email": "john@example.com",
  "message": "Hello!",
  "clientIp": "192.168.1.1",
  "submittedAt": "2025-01-15T10:30:00Z",
  "metadata": {
    "phone": "555-1234"
  }
}</pre>

                <p class="mt-3"><strong>HMAC Signature:</strong></p>
                <p class="small">If a secret is configured, each request will include an <code>X-Webhook-Signature</code> header with HMAC-SHA256 signature for verification.</p>

                <p class="mt-3"><strong>Response:</strong></p>
                <p class="small">Your endpoint should return a 2xx status code to acknowledge receipt. Failed webhooks will be logged.</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
